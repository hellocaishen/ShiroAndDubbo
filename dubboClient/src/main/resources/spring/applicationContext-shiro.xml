<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">
		
	 <!--配置自定义的realm -->
    <bean id="myRealm" class="com.wsbg.controller.MyRealm">
           <!-- shiro 加密 -->
           <!-- <property name="credentialsMatcher">
             <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
               <property name="hashAlgorithmName" value="MD5"/>
           </bean>
           </property> -->
           <property name="cacheManager" ref="cacheManager" /> 
    </bean>
    
	<!-- 配置权限管理器 -->    
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">      
        <!-- ref对应我们写的realm  MyShiro -->    
        <property name="realm" ref="myRealm"/>      
        <!-- 使用下面配置的缓存管理器 -->    
        <property name="cacheManager" ref="cacheManager"/>      
    </bean> 
   
   <!-- 自定义一个多重角色过滤器 -->
    <bean id="roleFilter" class="com.wsbg.filter.CustomRoleFilter" />
    <!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->    
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" depends-on="roleFilter">     
        <!-- 调用我们配置的权限管理器 -->     
        <property name="securityManager" ref="securityManager"/>     
        <!-- 配置我们的登录请求地址 -->     
        <property name="loginUrl" value="/login.do"/>      
        <!-- 配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址 -->    
        <property name="successUrl" value="/index.do"/>      
        <!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 -->    
        <property name="unauthorizedUrl" value="/unthenc.do"/>    
        
        <property name="filters">
              <map>
                   <entry key="authc" >
                       <bean class="com.wsbg.controller.MyFormAuthenticationFilter"/>
                   </entry>
                   <entry key="roleFilter" value-ref="roleFilter"/>
              </map>
        </property>  
        <!-- 权限配置 -->    
        <property name="filterChainDefinitions">      
            <value>      
                <!-- anon表示此地址不需要任何权限即可访问 -->    
               /page/css/**=anon
               /page/js/**=anon
               /page/images/**=anon
               /page/webLog/**=anon        
               /page/static/** =anon
               <!--条形验证码放过 -->
               /image/cata.jpg=anon
               <!-- 放弃一层的拦截 -->
                /timeout.do=anon
                /login=anon
                <!-- perms[user:query]表示访问此连接需要权限为user:query的用户 -->    
                /user/list.do=perms[user:query]    
                <!-- roles[manager]表示访问此连接需要用户的角色为manager -->    
                /user/add.do=authc,roleFilter["admin","manager"]
                /system/add.do=roles[admin]
                <!--配置多个角色-->
                <!--/user/del/**=anyRoles[admin,manager]-->
                /user/del/**=roles[manager]    
                /user/edit/**=roles[manager]    
                <!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login.do-->      
                <!-- /** = authc     -->
                <!-- 对静态媒介资源进行查询-->
                /media/** = anon
            </value>      
        </property>      
    </bean>    
        
     <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />     

    <!-- 用户授权信息Cache -->  
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />  
    
     <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    
    
     <!-- 会话管理器，设定会话超时及保存 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 全局会话超时时间（单位毫秒），默认30分钟 -->
        <property name="globalSessionTimeout" value="1800000" />
        <property name="sessionDAO" ref="sessionDAO"/>
    </bean>
    <!-- 会话验证调度器，每30分钟执行一次验证 -->
    <!-- <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler"> -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <property name="interval" value="1800000"/><!--毫秒值ms-->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    
       <!-- sessionDAO保存认证信息 -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
        <property name="cacheManager" ref="cacheManager" />
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <!-- 开启Shiro注解 -->
    <!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean> -->
    
    <!-- AOP式方法级权限检查 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	     <property name="securityManager" ref="securityManager" />
	</bean>
</beans>